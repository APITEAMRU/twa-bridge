import{EventThemeChanged as e}from"solid";import{getThemeParams as t}from"utils";import{createSignal as s,onMount as a,onCleanup as o}from"solid-js";const n=()=>{const[e,t]=s({height:0,is_expanded:!1,is_state_stable:!1}),n=e=>t(e);return a((()=>{ge(ot,n),be(De)})),o((()=>{we(ot,n)})),e},r="web",i="phone",_="desktop",p="not_supported",u=(e,t)=>{const s=new URLSearchParams(window.location.hash.slice(1)).get("tgWebAppVersion");return Number(s)>=e&&-1!==t.indexOf((()=>{const e=window.location.hash.slice(1),t=new URLSearchParams(e).get("tgWebAppPlatform")??"ios";return["android","ios"].includes(t)?i:["tdesktop","macos"].includes(t)?_:r})())},d=()=>Math.random().toString(36).substring(3,9),c=()=>b()?(be(xe),{status:!0}):(de(xe,1),{status:p}),b=()=>u(0,[r,_,i]),l=()=>g()?(be(Pe),{status:!0}):(de(Pe,1),{status:p}),g=()=>u(6.4,[i]),w=e=>m()?(be(Se,e),{status:!0}):(de(Se,1),{status:p}),m=()=>u(0,[r,_,i]),h=()=>f()?(be(ke),{status:!0}):(de(ke,1),{status:p}),f=()=>u(0,[i]),v=e=>q()?(be(Oe,e),{status:!0}):(de(Oe,1),{status:p}),q=()=>u(0,[r]),y=()=>x()?(be(Oe),{status:!0}):(de(Oe,1),{status:p}),x=()=>u(0,[r]),P="web_app_invoke_custom_method",S=async e=>k()?(void 0===e.req_id&&(e.req_id=d()),be(P,e),new Promise(((t,s)=>{const a=s=>{s.req_id===e.req_id&&(t({status:!0,data:s}),we(Fe,a))};ge(Fe,a)}))):(de(P,1),{status:p}),k=()=>u(6.9,[r,_,i]),O=e=>R()?(be(Te,e),{status:!0}):(de(Te,1),{status:p}),R=()=>u(6.1,[r,_,i]),T=e=>E()?(be(Ee,e),{status:!0}):(de(Ee,1),{status:p}),E=()=>u(6.4,[r,_,i]),C=async e=>W()?(e.title.length>64&&de(Ce,3),e.message.length<1&&de(Ce,4),e.message.length>256&&de(Ce,5),e.buttons.length<1&&de(Ce,6),e.buttons.length>3&&de(Ce,7),void 0!==e.buttons.find((e=>e.text?.match(/^(ok|close|cancel)$/g)))&&de(Ce,8),be(Ce,e),new Promise(((t,s)=>{const a=s=>{t({status:!!e.buttons.find((e=>e.id===s?.button_id)),data:s}),we(Xe,a)};ge(Xe,a)}))):(de(Ce,1),{status:p}),W=()=>u(6.2,[r,_,i]),I=async e=>B()?(be(ve,e),new Promise(((t,s)=>{me(Ze,(s=>{e.is_close&&l(),t({status:!0,data:s})})),me(et,(()=>{t({status:"closed"})}))}))):(de(ve,1),{status:p}),B=()=>u(6.4,[i]),D=e=>("/"!==e.path_full[0]&&(e.path_full="/"+e.path_full),L()?(be(We,e),{status:!0}):(de(We,1),{status:p})),L=()=>u(7,[r,_,i]),N=async e=>A()?(void 0===e.req_id&&(e.req_id=d()),be(qe,e),new Promise(((t,s)=>{const a=s=>{s.req_id===e.req_id&&(t({status:!0,data:s}),we(je,a))};ge(je,a)}))):(de(qe,1),{status:p}),A=()=>u(6.4,[r,_,i]),M=()=>U()?(be(Ie),{status:!0}):(de(Ie,1),{status:p}),U=()=>u(6.9,[r,_,i]),V=async()=>$()?(be(ye),new Promise(((e,t)=>{me(Ke,(t=>{"sent"===t.status&&e({status:!0}),e({status:!1})}))}))):(de(ye,1),{status:p}),$=()=>u(6.9,[r,_,i]),G=()=>J()?(be(Be),{status:!0}):(de(Be,1),{status:p}),J=()=>u(0,[r,_,i]),Q=()=>j()?(be(De),{status:!0}):(de(De,1),{status:p}),j=()=>u(0,[r,_,i]),F=()=>H()?(be(Le),{status:!0}):(de(Le,1),{status:p}),H=()=>u(6.9,[r,_,i]),z=e=>K()?(be(Ne,e),{status:!0}):(de(Ne,1),{status:p}),K=()=>u(6.1,[r,_,i]),X=e=>Y()?(be(Ae,e),{status:!0}):(de(Ae,1),{status:p}),Y=()=>u(6.1,[r,_,i]),Z=e=>ee()?(be(Me,e),{status:!0}):(de(Me,1),{status:p}),ee=()=>u(6.1,[r,_,i]),te=e=>se()?(be(Ue,e),{status:!0}):(de(Ue,1),{status:p}),se=()=>u(0,[r,_,i]),ae=e=>oe()?(be(Ve,e),{status:!0}):(de(Ve,1),{status:p}),oe=()=>u(0,[r,_,i]),ne=e=>re()?(be($e,e),{status:!0}):(de($e,1),{status:p}),re=()=>u(6.1,[r,_,i]),ie=e=>_e()?(e.query.length>256&&de(Ge,9),be(Ge,e),{status:!0}):(de(Ge,1),{status:p}),_e=()=>u(6.7,[r,_,i]),pe=e=>ue()?(be(Je,e),{status:!0}):(de(Je,1),{status:p}),ue=()=>u(6.1,[i]);var de=(e,t)=>{"development"===process.env.NODE_ENV&&console.error(`[@apiteam/twa-bridge](${e}) = ${t}`)};const ce=()=>{const e=new URLSearchParams(window.location.hash.slice(1)).get("tgWebAppData");if(null===e)return de("getInitData",2),null;const t=new URLSearchParams(e);let s={};return t.forEach(((e,t)=>{if(s[t]=e,void 0!==t.match(/^(chat|receiver|user)$/g))try{s[t]=JSON.parse(e)}catch{}})),s};var be=(e,t)=>{window.TelegramWebviewProxy?window.TelegramWebviewProxy.postEvent(e,JSON.stringify(t)):window.external&&"notify"in window.external&&window.external.notify(JSON.stringify({eventType:e,eventData:t}))};const le=((e=new Map)=>({once:(t,s,a=e.get(t),o=(e=>{s(e),a&&a.splice(a.indexOf(s)>>>0,1)}))=>a?a.push(o):e.set(t,[o]),on:(t,s,a=e.get(t))=>a?a.push(s):e.set(t,[s]),off:(t,s,a=e.get(t))=>a&&s?a.splice(a.indexOf(s)>>>0,1):e.set(t,[]),emit:(t,s,a=e.get(t)||[])=>{for(const e of a)e(s)}}))();(()=>{function s(s,a){s===e&&(a.theme_params=t(a.theme_params)),le.emit(s,a),le.emit("*",{name:s,data:a})}window.TelegramGameProxy_receiveEvent=s,window.Telegram={WebView:{receiveEvent:s}},window.TelegramGameProxy={receiveEvent:s}})();const ge=(e,t)=>{le.on(e,t)},we=(e,t)=>{le.off(e,t)},me=(e,t)=>{le.once(e,t)};var he=Object.freeze({__proto__:null,off:we,on:ge,once:me});const fe="web_app_invoke_custom_method",ve="web_app_open_scan_qr_popup",qe="web_app_read_text_from_clipboard",ye="web_app_request_phone",xe="web_app_close",Pe="web_app_close_scan_qr_popup",Se="web_app_data_send",ke="web_app_expand",Oe="iframe_ready",Re="iframe_will_reload",Te="web_app_open_invoice",Ee="web_app_open_link",Ce="web_app_open_popup",We="web_app_open_tg_link",Ie="web_app_ready",Be="web_app_request_theme",De="web_app_request_viewport",Le="web_app_request_write_access",Ne="web_app_set_background_color",Ae="web_app_set_header_color",Me="web_app_setup_back_button",Ue="web_app_setup_closing_behavior",Ve="web_app_setup_main_button",$e="web_app_setup_settings_button",Ge="web_app_switch_inline_query",Je="web_app_trigger_haptic_feedback",Qe="back_button_pressed",je="clipboard_text_received",Fe="custom_method_invoked",He="invoice_closed",ze="main_button_pressed",Ke="phone_requested",Xe="popup_closed",Ye="reload_iframe",Ze="qr_text_received",et="scan_qr_popup_closed",tt="set_custom_style",st="settings_button_pressed",at="theme_changed",ot="viewport_changed",nt="write_access_requested";export{Qe as EventBackButtonPressed,je as EventClipboardTextReceived,Fe as EventCustomMethodInvoked,He as EventInvoiceClosed,ze as EventMainButtonPressed,Ke as EventPhoneRequested,Xe as EventPopupClosed,Ze as EventQrTextReceived,Ye as EventReloadIframe,et as EventScanQrPopupClosed,tt as EventSetCustomStyle,st as EventSettingsButtonPressed,at as EventThemeChanged,ot as EventViewportChanged,nt as EventWriteAccessRequested,xe as MethodClose,Pe as MethodCloseScanQrPopup,Se as MethodDataSend,ke as MethodExpand,Oe as MethodIframeReady,Re as MethodIframeWillReload,fe as MethodInvokeCustomMethod,Te as MethodOpenInvoice,Ee as MethodOpenLink,Ce as MethodOpenPopup,ve as MethodOpenScanQrPopup,We as MethodOpenTgLink,qe as MethodReadTextFromClipboard,Ie as MethodReady,ye as MethodRequestPhone,Be as MethodRequestTheme,De as MethodRequestViewport,Le as MethodRequestWriteAccess,Ne as MethodSetBackgroundColor,Ae as MethodSetHeaderColor,Me as MethodSetupBackButton,Ue as MethodSetupClosingBehavior,Ve as MethodSetupMainButton,$e as MethodSetupSettingsButton,Ge as MethodSwitchInlineQuery,Je as MethodTriggerHapticFeedback,p as NOT_SUPPORTED,_ as TG_DESKTOP,i as TG_PHONE,r as TG_WEB,c as bridgeClose,l as bridgeCloseScanQrPopup,w as bridgeDataSend,h as bridgeExpand,ce as bridgeGetInitData,v as bridgeIframeReady,y as bridgeIframeWillReload,S as bridgeInvokeCustomMethod,O as bridgeOpenInvoice,T as bridgeOpenLink,C as bridgeOpenPopup,I as bridgeOpenScanQrPopup,D as bridgeOpenTgLink,N as bridgeReadTextFromClipboard,M as bridgeReady,V as bridgeRequestPhone,G as bridgeRequestTheme,Q as bridgeRequestViewport,F as bridgeRequestWriteAccess,z as bridgeSetBackgroundColor,X as bridgeSetHeaderColor,Z as bridgeSetupBackButton,te as bridgeSetupClosingBehavior,ae as bridgeSetupMainButton,ne as bridgeSetupSettingsButton,ie as bridgeSwitchInlineQuery,pe as bridgeTriggerHapticFeedback,n as createIsViewportChanged,de as debug,he as listener,be as sender,b as supportClose,g as supportCloseScanQrPopup,m as supportDataSend,f as supportExpand,q as supportIframeReady,x as supportIframeWillReload,k as supportInvokeCustomMethod,R as supportOpenInvoice,E as supportOpenLink,W as supportOpenPopup,B as supportOpenScanQrPopup,L as supportOpenTgLink,A as supportReadTextFromClipboard,U as supportReady,$ as supportRequestPhone,J as supportRequestTheme,j as supportRequestViewport,H as supportRequestWriteAccess,K as supportSetBackgroundColor,Y as supportSetHeaderColor,ee as supportSetupBackButton,se as supportSetupClosingBehavior,oe as supportSetupMainButton,re as supportSetupSettingsButton,_e as supportSwitchInlineQuery,ue as supportTriggerHapticFeedback};
