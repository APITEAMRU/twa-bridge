import e from"debug";const t="web",s="phone",a="desktop",r="not_supported",o=(e,r)=>{const o=new URLSearchParams(window.location.hash.slice(1)).get("tgWebAppVersion");return Number(o)>=e&&-1!==r.indexOf((()=>{const e=window.location.hash.slice(1),r=new URLSearchParams(e).get("tgWebAppPlatform")??"ios";return["android","ios"].includes(r)?s:["tdesktop","macos"].includes(r)?a:t})())},n=()=>Math.random().toString(36).substring(3,9),i=e=>{var t;if(t=/^\s*#([0-9a-f]{6})\s*$/i.exec(e+=""))return"#"+t[1].toLowerCase();if(t=/^\s*#([0-9a-f])([0-9a-f])([0-9a-f])\s*$/i.exec(e))return("#"+t[1]+t[1]+t[2]+t[2]+t[3]+t[3]).toLowerCase();if(t=/^\s*rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*(\d+\.{0,1}\d*))?\)\s*$/.exec(e)){var s=parseInt(t[1]),a=parseInt(t[2]),r=parseInt(t[3]);return"#"+((s<16?"0":"")+s.toString(16))+((a<16?"0":"")+a.toString(16))+((r<16?"0":"")+r.toString(16))}return!1},_=()=>p()?(ge($e),{status:!0}):(de($e,1),{status:r}),p=()=>o(0,[t,a,s]),u=()=>d()?(ge(Be),{status:!0}):(de(Be,1),{status:r}),d=()=>o(6.4,[s]),c=e=>g()?(ge(Me,e),{status:!0}):(de(Me,1),{status:r}),g=()=>o(0,[t,a,s]),b=()=>l()?(ge(Ae),{status:!0}):(de(Ae,1),{status:r}),l=()=>o(0,[s]),w=e=>m()?(ge(Ue,e),{status:!0}):(de(Ue,1),{status:r}),m=()=>o(0,[t]),h=()=>f()?(ge(Ue),{status:!0}):(de(Ue,1),{status:r}),f=()=>o(0,[t]),v="web_app_invoke_custom_method",y=async e=>S()?(void 0===e.req_id&&(e.req_id=n()),ge(v,e),new Promise(((t,s)=>{const a=s=>{s.req_id===e.req_id&&(t({status:!0,data:s}),Ne(we,a))};Te(we,a)}))):(de(v,1),{status:r}),S=()=>o(6.9,[t,a,s]),q=e=>x()?(ge(Ve,e),{status:!0}):(de(Ve,1),{status:r}),x=()=>o(6.1,[t,a,s]),k=e=>P()?(ge(Qe,e),{status:!0}):(de(Qe,1),{status:r}),P=()=>o(6.4,[t,a,s]),O=async e=>I()?(e.title.length>64&&de(Fe,3),e.message.length<1&&de(Fe,4),e.message.length>256&&de(Fe,5),e.buttons.length<1&&de(Fe,6),e.buttons.length>3&&de(Fe,7),void 0!==e.buttons.find((e=>e.text?.match(/^(ok|close|cancel)$/g)))&&de(Fe,8),ge(Fe,e),new Promise(((t,s)=>{const a=s=>{t({status:!!e.buttons.find((e=>e.id===s?.button_id)),data:s}),Ne(ve,a)};Te(ve,a)}))):(de(Fe,1),{status:r}),I=()=>o(6.2,[t,a,s]),R=async e=>T()?(ge(Ee,e),new Promise(((t,s)=>{Ce(Se,(s=>{e.is_close&&u(),t({status:!0,data:s})})),Ce(qe,(()=>{t({status:"closed"})}))}))):(de(Ee,1),{status:r}),T=()=>o(6.4,[s]),N=e=>("/"!==e.path_full[0]&&(e.path_full="/"+e.path_full),C()?(ge(He,e),{status:!0}):(de(He,1),{status:r})),C=()=>o(7,[t,a,s]),L=async e=>W()?(void 0===e.req_id&&(e.req_id=n()),ge(De,e),new Promise(((t,s)=>{const a=s=>{s.req_id===e.req_id&&(t({status:!0,data:s}),Ne(le,a))};Te(le,a)}))):(de(De,1),{status:r}),W=()=>o(6.4,[t,a,s]),E=()=>D()?(ge(je),{status:!0}):(de(je,1),{status:r}),D=()=>o(6.9,[t,a,s]),J=async()=>$()?(ge(Je),new Promise(((e,t)=>{Ce(fe,(t=>{"sent"===t.status&&e({status:!0}),e({status:!1})}))}))):(de(Je,1),{status:r}),$=()=>o(6.9,[t,a,s]),B=()=>M()?(ge(ze),{status:!0}):(de(ze,1),{status:r}),M=()=>o(0,[t,a,s]),A=()=>U()?(ge(Ke),{status:!0}):(de(Ke,1),{status:r}),U=()=>o(0,[t,a,s]),G=()=>V()?(ge(Xe),{status:!0}):(de(Xe,1),{status:r}),V=()=>o(6.9,[t,a,s]),Q=e=>F()?(ge(Ye,e),{status:!0}):(de(Ye,1),{status:r}),F=()=>o(6.1,[t,a,s]),H=e=>j()?(ge(Ze,e),{status:!0}):(de(Ze,1),{status:r}),j=()=>o(6.1,[t,a,s]),z=e=>K()?(ge(et,e),{status:!0}):(de(et,1),{status:r}),K=()=>o(6.1,[t,a,s]),X=e=>Y()?(ge(tt,e),{status:!0}):(de(tt,1),{status:r}),Y=()=>o(0,[t,a,s]),Z=e=>ee()?(ge(st,e),{status:!0}):(de(st,1),{status:r}),ee=()=>o(0,[t,a,s]),te=e=>se()?(ge(at,e),{status:!0}):(de(at,1),{status:r}),se=()=>o(6.1,[t,a,s]),ae=e=>re()?(e.query.length>256&&de(rt,9),ge(rt,e),{status:!0}):(de(rt,1),{status:r}),re=()=>o(6.7,[t,a,s]),oe=e=>ne()?(ge(ot,e),{status:!0}):(de(ot,1),{status:r}),ne=()=>o(6.1,[s]),ie=({key:e,value:t})=>{try{return window.sessionStorage.setItem("__telegram__"+e,JSON.stringify(t)),{status:!0}}catch(e){}return{status:!1}},_e=()=>!0,pe=({key:e})=>{try{return{value:JSON.parse(window.sessionStorage.getItem("__telegram__"+e)??""),status:!0}}catch(e){}return{status:!1}},ue=()=>!0;var de=(e,t)=>{"development"===process.env.NODE_ENV&&console.error(`[@apiteam/twa-bridge](${e}) = ${t}`)};const ce=()=>{const e=new URLSearchParams(window.location.hash.slice(1)).get("tgWebAppData");if(null===e)return de("getInitData",2),null;const t=new URLSearchParams(e);let s={};return t.forEach(((e,t)=>{if(s[t]=e,void 0!==t.match(/^(chat|receiver|user)$/g))try{s[t]=JSON.parse(e)}catch{}})),s};var ge=(t,s)=>{if(window.TelegramWebviewProxy)window.TelegramWebviewProxy.postEvent(t,JSON.stringify(s));else if(window.external&&"notify"in window.external)window.external.notify(JSON.stringify({eventType:t,eventData:s}));else try{"*",window.parent.postMessage(JSON.stringify({eventType:t,eventData:s}),"*")}catch(t){e("postMessage Iframe",10)}};const be="back_button_pressed",le="clipboard_text_received",we="custom_method_invoked",me="invoice_closed",he="main_button_pressed",fe="phone_requested",ve="popup_closed",ye="reload_iframe",Se="qr_text_received",qe="scan_qr_popup_closed",xe="set_custom_style",ke="settings_button_pressed",Pe="theme_changed",Oe="viewport_changed",Ie="write_access_requested",Re=((e=new Map)=>({once:(t,s,a=e.get(t),r=(e=>{s(e),a&&a.splice(a.indexOf(s)>>>0,1)}))=>a?a.push(r):e.set(t,[r]),on:(t,s,a=e.get(t))=>a?a.push(s):e.set(t,[s]),off:(t,s,a=e.get(t))=>a&&s?a.splice(a.indexOf(s)>>>0,1):e.set(t,[]),emit:(t,s,a=e.get(t)||[])=>{for(const e of a)e(s)}}))();(()=>{function e(e,t){e===Pe&&(t.theme_params=(e=>{"#1c1c1d"==e.bg_color&&e.bg_color==e.secondary_bg_color&&(e.secondary_bg_color="#2c2c2e");const t=window.location.hash.slice(1),s=new URLSearchParams(t);var a=JSON.parse(s.get("tgWebAppThemeParams")??"");for(var r in e){var o=i(e[r]);"string"==typeof o&&(a[r]=o)}return a})(t.theme_params)),Re.emit(e,t),Re.emit("*",{name:e,data:t})}window.TelegramGameProxy_receiveEvent=e,window.Telegram={WebView:{receiveEvent:e}},window.TelegramGameProxy={receiveEvent:e}})();const Te=(e,t)=>{Re.on(e,t)},Ne=(e,t)=>{Re.off(e,t)},Ce=(e,t)=>{Re.once(e,t)};var Le=Object.freeze({__proto__:null,off:Ne,on:Te,once:Ce});const We="web_app_invoke_custom_method",Ee="web_app_open_scan_qr_popup",De="web_app_read_text_from_clipboard",Je="web_app_request_phone",$e="web_app_close",Be="web_app_close_scan_qr_popup",Me="web_app_data_send",Ae="web_app_expand",Ue="iframe_ready",Ge="iframe_will_reload",Ve="web_app_open_invoice",Qe="web_app_open_link",Fe="web_app_open_popup",He="web_app_open_tg_link",je="web_app_ready",ze="web_app_request_theme",Ke="web_app_request_viewport",Xe="web_app_request_write_access",Ye="web_app_set_background_color",Ze="web_app_set_header_color",et="web_app_setup_back_button",tt="web_app_setup_closing_behavior",st="web_app_setup_main_button",at="web_app_setup_settings_button",rt="web_app_switch_inline_query",ot="web_app_trigger_haptic_feedback";export{be as EventBackButtonPressed,le as EventClipboardTextReceived,we as EventCustomMethodInvoked,me as EventInvoiceClosed,he as EventMainButtonPressed,fe as EventPhoneRequested,ve as EventPopupClosed,Se as EventQrTextReceived,ye as EventReloadIframe,qe as EventScanQrPopupClosed,xe as EventSetCustomStyle,ke as EventSettingsButtonPressed,Pe as EventThemeChanged,Oe as EventViewportChanged,Ie as EventWriteAccessRequested,$e as MethodClose,Be as MethodCloseScanQrPopup,Me as MethodDataSend,Ae as MethodExpand,Ue as MethodIframeReady,Ge as MethodIframeWillReload,We as MethodInvokeCustomMethod,Ve as MethodOpenInvoice,Qe as MethodOpenLink,Fe as MethodOpenPopup,Ee as MethodOpenScanQrPopup,He as MethodOpenTgLink,De as MethodReadTextFromClipboard,je as MethodReady,Je as MethodRequestPhone,ze as MethodRequestTheme,Ke as MethodRequestViewport,Xe as MethodRequestWriteAccess,Ye as MethodSetBackgroundColor,Ze as MethodSetHeaderColor,et as MethodSetupBackButton,tt as MethodSetupClosingBehavior,st as MethodSetupMainButton,at as MethodSetupSettingsButton,rt as MethodSwitchInlineQuery,ot as MethodTriggerHapticFeedback,r as NOT_SUPPORTED,a as TG_DESKTOP,s as TG_PHONE,t as TG_WEB,_ as bridgeClose,u as bridgeCloseScanQrPopup,c as bridgeDataSend,b as bridgeExpand,ce as bridgeGetInitData,w as bridgeIframeReady,h as bridgeIframeWillReload,y as bridgeInvokeCustomMethod,q as bridgeOpenInvoice,k as bridgeOpenLink,O as bridgeOpenPopup,R as bridgeOpenScanQrPopup,N as bridgeOpenTgLink,L as bridgeReadTextFromClipboard,E as bridgeReady,J as bridgeRequestPhone,B as bridgeRequestTheme,A as bridgeRequestViewport,G as bridgeRequestWriteAccess,pe as bridgeSessionStorageGet,ie as bridgeSessionStorageSet,Q as bridgeSetBackgroundColor,H as bridgeSetHeaderColor,z as bridgeSetupBackButton,X as bridgeSetupClosingBehavior,Z as bridgeSetupMainButton,te as bridgeSetupSettingsButton,ae as bridgeSwitchInlineQuery,oe as bridgeTriggerHapticFeedback,de as debug,Le as listener,ge as sender,p as supportClose,d as supportCloseScanQrPopup,g as supportDataSend,l as supportExpand,m as supportIframeReady,f as supportIframeWillReload,S as supportInvokeCustomMethod,x as supportOpenInvoice,P as supportOpenLink,I as supportOpenPopup,T as supportOpenScanQrPopup,C as supportOpenTgLink,W as supportReadTextFromClipboard,D as supportReady,$ as supportRequestPhone,M as supportRequestTheme,U as supportRequestViewport,V as supportRequestWriteAccess,ue as supportSessionStorageGet,_e as supportSessionStorageSet,F as supportSetBackgroundColor,j as supportSetHeaderColor,K as supportSetupBackButton,Y as supportSetupClosingBehavior,ee as supportSetupMainButton,se as supportSetupSettingsButton,re as supportSwitchInlineQuery,ne as supportTriggerHapticFeedback};
